buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            url 'https://plugins.gradle.org/m2/'
        }

        maven {
            url 'https://mvnrepository.com/artifact/org.lz4/lz4-java'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'idea'

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

def buildnumber = System.getenv("BUILD_NUMBER")
def travisbuildnumber = (System.getenv("TRAVIS_BUILD_NUMBER") ?: -000).toInteger() + 00
version = "${minecraft_version}-${mod_version}.${buildnumber ?: travisbuildnumber}"
group= group_id // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = mod_id

def numina_version = (System.getenv("NUMINA_VERSION") ?:"1.4.0")

repositories {
	//JEI
	maven {
            url "http://dvs1.progwml6.com/files/maven"
	}
    mavenCentral()
}

dependencies {
    // compile against the JEI API
    deobfCompile "mezz.jei:jei_${minecraft_version}:${jei_version}:api"

    compile group: 'com.google.guava', name: 'guava', version: '22.0'
    
    // at runtime, use the full JEI jar
    runtime "mezz.jei:jei_${minecraft_version}:${jei_version}"




    //compile group: 'org.lz4', name: 'lz4-java', version: '1.4.1'



}

minecraft {
    version = minecraft_version + "-" + forge_version// + "-" + "1.10.0"
    runDir = "run"
    mappings = mcp_mappings
    replace "@numina_version@", numina_version
    replace "@VERSION@", project.version
    useDepAts = true
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    // Move access transformers to META-INF
    rename '(.+_at.cfg)', 'META-INF/$1'
}

jar {
    manifest {
        attributes 'FMLAT': 'numina_at.cfg'
    }
}

task devJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

artifacts {
    archives devJar
}

task copyToLib(type: Copy) {
    into "$buildDir/libs"
    from(sourceSets.main.resources.srcDirs){
        include 'mps-vanilla.recipes'
//        include 'mps-thermalexpansion.recipes'
        include 'mps-ic2.recipes'
        include 'mps-enderio.recipes'
    }
}

build.dependsOn(copyToLib)

idea {
    module {
        inheritOutputDirs = true
    }
}
